什么是 Spring Boot？
Spring Boot 是 Spring 开源组织下的子项目，是 Spring 组件一站式解决方案，
优点：
简化了使用 Spring 的难度，简省了繁重的配置，提供了各种启动器，开发者能快速上手。
Spring Boot 有哪些优点？
Spring Boot 主要有如下优点：
1. 容易上手，提升开发效率，为 Spring 开发提供一个更快、更广泛的入门体验。
2. 开箱即用，远离繁琐的配置。
3. 提供了一系列大型项目通用的非业务性功能，例如：内嵌服务器、安全管理、运行数据监控、运行状况检查和外部化配置等。
4. 没有代码生成，也不需要XML配置。
5. 避免大量的 Maven 导入和各种版本冲突。
Spring Boot 的核心注解是哪个？它主要由哪几个注解组成的？
   启动类上面的注解是@SpringBootApplication，它也是 Spring Boot 的核心注解，主要组合包含了以下 3 个注解：
   @SpringBootConfiguration：组合了 @Configuration 注解，实现配置文件的功能。
   @EnableAutoConfiguration：打开自动配置的功能，也可以关闭某个自动配置的选项，如关闭数据源自动配置功能：  @SpringBootApplication(exclude = { DataSourceAutoConfiguration.class })。
   @ComponentScan：Spring组件扫描。
Spring Boot 自动配置原理是什么？
   1.注解 @EnableAutoConfiguration, @Configuration, @ConditionalOnClass 就是自动配置的核心，
   2.@EnableAutoConfiguration 给容器导入META-INF/spring.factories 里定义的自动配置类，筛选有效的自动配置类。
   3.每一个自动配置类结合对应的 xxxProperties.java 读取配置文件进行自动配置功能
spring boot 核心配置文件是什么？bootstrap.properties 和 application.properties 有何区别 ?
单纯做 Spring Boot 开发，可能不太容易遇到 bootstrap.properties 配置文件，但是在结合 Spring Cloud 时，这个配置就会经常遇到了，特别是在需要加载一些远程配置文件的时侯。
spring boot 核心的两个配置文件：
● bootstrap (. yml 或者 . properties)：boostrap 由父 ApplicationContext  加载的，比 applicaton 优先加载，配置在应用程序上下文的引导阶段生效。一般来说我们在 Spring Cloud Config 或者  Nacos 中会用到它。且 boostrap 里面的属性不能被覆盖；
● application (. yml 或者 . properties)： 由ApplicatonContext 加载，用于 spring boot 项目的自动化配置。
spring-boot-starter-parent 有什么用 ?
  我们都知道，新创建一个 Spring Boot 项目，默认都是有 parent 的，这个 parent 就是 spring-boot-starter-parent ，spring-boot-starter-parent 主要有如下作用：
1. 定义了 Java 编译版本为 1.8 。
2. 使用 UTF-8 格式编码。
3. 继承自 spring-boot-dependencies，这个里边定义了依赖的版本，也正是因为继承了这个依赖，所以我们在写依赖时才不需要写版本号。
4. 执行打包操作的配置。
5. 自动化的资源过滤。
6. 自动化的插件配置。
7. 针对 application.properties 和 application.yml 的资源过滤，包括通过 profile 定义的不同环境的配置文件，例如 application-dev.properties 和 application-dev.yml。
spring cloud 面试题
